import 'apollo-server-env';
export { runHttpQuery, HttpQueryRequest, HttpQueryError } from 'apollo-server-core/dist/runHttpQuery';
export { default as GraphQLOptions, resolveGraphqlOptions, PersistedQueryOptions, } from 'apollo-server-core/dist/graphqlOptions';
export { ApolloError, toApolloError, SyntaxError, ValidationError, AuthenticationError, ForbiddenError, UserInputError, formatApolloErrors, } from 'apollo-server-errors';
export { convertNodeHttpToRequest } from 'apollo-server-core/dist/nodeHttpToRequest';
export { createPlaygroundOptions, PlaygroundConfig, defaultPlaygroundOptions, PlaygroundRenderPageOptions, } from 'apollo-server-core/dist/playground';
export { ApolloServerBase } from 'apollo-server-core/dist/ApolloServer';
export * from 'apollo-server-core/dist/types';
export * from 'apollo-server-core/dist/requestPipelineAPI';
import { DocumentNode } from 'graphql';
export declare const gql: (template: TemplateStringsArray | string, ...substitutions: any[]) => DocumentNode;
import { GraphQLScalarType } from 'graphql';
export { default as processFileUploads } from 'apollo-server-core/dist/processFileUploads';
export declare const GraphQLUpload: GraphQLScalarType | undefined;
export * from 'apollo-server-core/dist/plugin';
//# sourceMappingURL=index.d.ts.map